# Copyright 2009-2011 Pierre Lejeune <superheron@gmail.com>
# Copyright 2011 Brett Witherspoon <spoonb@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

require systemd-service

SUMMARY="Lightweight DNS forwarder and DHCP server"
DESCRIPTION="
Dnsmasq is a lightweight, easy to configure DNS forwarder and DHCP server. It is
designed to provide DNS and, optionally, DHCP, to a small network. It can serve
the names of local machines which are not in the global DNS. The DHCP server
integrates with the DNS server and allows machines with DHCP-allocated addresses
to appear in the DNS with names configured either in each host or in a central
configuration file. Dnsmasq supports static and dynamic DHCP leases and BOOTP/
TFTP/PXE for network booting of diskless machines.
"
BASEURI="http://www.thekelleys.org.uk/${PN}"
HOMEPAGE="${BASEURI}/doc.html"
DOWNLOADS="${BASEURI}/${PNV}.tar.gz"

UPSTREAM_CHANGELOG="${BASEURI}/CHANGELOG [[ lang = en ]]"

LICENCES="|| ( GPL-2 GPL-3 )"
SLOT="0"
PLATFORMS="~amd64 ~arm ~x86"
MYOPTIONS="
    baselayout
    conntrack [[ description = [ Enables connection tracking via NetFilter ] ]]
    dbus
    doc
    idn [[ description = [ Support international domain names ] ]]
    nls
    systemd [[ requires = [ dbus ] ]]
"

DEPENDENCIES="
    build:
        virtual/pkg-config
        nls? ( sys-devel/gettext )
    build+run:
        conntrack? ( net-libs/libnetfilter_conntrack )
        dbus? ( sys-apps/dbus )
        idn? ( net-dns/libidn )
        nls? ( net-dns/libidn )
"

src_prepare() {
    # Use a more sane lease directory
    edo sed -e 's:^#dhcp-leasefile=.*:dhcp-leasefile=/var/lib/dnsmasq/dnsmasq.leases:' \
            dnsmasq.conf.example > dnsmasq.conf
    # Adapt some config.h defines
    edo sed -i -e '/^#define RUNFILE/s:/var/run:/run:' \
               -e '/^#      define LEASEFILE/s:/var/lib/misc:/var/lib/dnsmasq:' \
            src/config.h
}

src_compile() {
    local COPTS=
    option dbus && COPTS="-DHAVE_DBUS"
    option conntrack && COPTS="${COPTS} -DHAVE_CT"
    option idn && COPTS="${COPTS} -DHAVE_IDN"
    emake \
        PREFIX=/usr/$(exhost --target)
        CC="${CC}" \
        CFLAGS="${CFLAGS}" \
        COPTS="${COPTS}" \
        all$(option nls && echo "-i18n")
}

src_install() {
    emake -j3 DESTDIR="${IMAGE}" PREFIX=/usr BINDIR=/usr/$(exhost --target)/bin install$(option nls && echo "-i18n")

    insinto /etc
    doins dnsmasq.conf

    # Lease directory
    dodir /var/lib/dnsmasq
    keepdir /var/lib/dnsmasq

    if option baselayout ; then
        newinitd "${FILES}"/dnsmasq.init dnsmasq
        newconfd "${FILES}"/dnsmasq.conf dnsmasq
    fi

    # Only install dnsmasq.service, not README
    insinto ${SYSTEMDSYSTEMUNITDIR}

    # Enable DBus connection for dnsmasq's service (dependent on the dbus option)
    if option dbus; then
        edo sed -i -e "/ExecStart=/s:-k:--enable-dbus -k:" "${WORK}"/contrib/systemd/${PN}.service
    fi

    doins "${WORK}"/contrib/systemd/${PN}.service

    if option dbus ; then
        insinto /etc/dbus-1/system.d
        doins dbus/dnsmasq.conf
    fi

    emagicdocs

    if option doc ; then
        docinto html
        dodoc *.html
    fi
}

