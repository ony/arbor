# Copyright 2012-2015 Wulf C. Krueger <philantrop@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

# kmod has python bindings. Since we have fucked up our python crap so much, though,
# I can't get both multibuild C and python to work together.
# zlin did some work on this. Status unknown.
#NOTE(moben): on cross this should not pose a problem and we can re-enable the python bindings
require alternatives

export_exlib_phases src_test src_install

SUMMARY="kmod - handle kernel modules"
DESCRIPTION="
kmod is a set of tools to handle common tasks with Linux kernel modules like
insert, remove, list, check properties, resolve dependencies, and aliases.
It replaces module-init-tools with which it is backwards-compatible.
"
HOMEPAGE="http://git.kernel.org/?p=utils/kernel/${PN}/${PN}.git"
DOWNLOADS="ftp://ftp.kernel.org/pub/linux/utils/kernel/${PN}/${PNV}.tar.xz"

BUGS_TO="philantrop@exherbo.org"
REMOTE_IDS="freecode:${PN}"

UPSTREAM_RELEASE_NOTES="http://git.kernel.org/?p=utils/kernel/kmod/kmod.git;a=blob_plain;f=NEWS"

LICENCES="GPL-2 LGPL-2.1"
SLOT="0"
MYOPTIONS="
    bash-completion
    debug
    doc [[ description = [ Build libkmod's API documentation using gtk-doc ] ]]
"

DEPENDENCIES="
    build:
        dev-libs/libxslt
        doc? ( dev-doc/gtk-doc )
    build+run:
        app-arch/xz
        sys-libs/zlib
        !sys-apps/module-init-tools [[
            description = [ module-init-tools has been replaced by kmod. ]
            resolution = uninstall-blocked-after
        ]]
"

DEFAULT_SRC_CONFIGURE_PARAMS=( '--enable-logging' '--enable-manpages' '--enable-tools' '--with-xz'
                               '--with-zlib' )

DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=( debug "doc gtk-doc" )

DEFAULT_SRC_CONFIGURE_OPTION_WITHS=(
    "bash-completion bashcompletiondir /usr/share/bash-completion/completions"
)

AT_M4DIR=( m4 )

kmod_src_test() {
    if [[ -d /lib/modules/$(uname -r)/build ]]; then
        edo mkdir -p testsuite
        emake -j1 check
    else
        ewarn "Skipping tests. No kernel tree at /lib/modules/$(uname -r)/build"
    fi
}

kmod_src_install() {
    local host=$(exhost --target)
    default

    # alternatives
    dodir /usr/${host}/bin
    local a alternatives=( kmod-tools ${PN} 10 )
    for a in depmod insmod modinfo modprobe lsmod rmmod; do
        dosym kmod /usr/${host}/bin/${a}
        alternatives+=(
            /usr/${host}/bin/${a}      ${PN}.${a}
            /usr/share/man/man8/${a}.8 ${PN}.${a}.8
        )
    done

    if ! option bash-completion ; then
        edo rm -r "${IMAGE}"/no
    fi

    alternatives+=(
        /usr/share/man/man5/depmod.d.5          ${PN}.depmod.d.5
        /usr/share/man/man5/modprobe.d.5        ${PN}.modprobe.d.5
        /usr/share/man/man5/modules.dep.5       ${PN}.modules.dep.5
        /usr/share/man/man5/modules.dep.bin.5   ${PN}.modules.dep.bin.5
    )

    alternatives_for "${alternatives[@]}"
}

