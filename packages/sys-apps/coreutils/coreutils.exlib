# Copyright 2007-2009 Bryan Ã˜stergaard
# Copyright 2009 Ingmar Vanhassel
# Copyright 2014 Wulf C. Krueger <philantrop@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

require gnu [ suffix=xz ] alternatives

export_exlib_phases src_prepare src_configure src_test src_test_expensive src_install pkg_preinst

SUMMARY="Core file, shell and text utilities expected to be on any system."

DOWNLOADS+=" http://dev.exherbo.org/distfiles/${PNV}-man-pages.tar.xz"

BUGS_TO="philantrop@exherbo.org"

LICENCES="GPL-3"
SLOT="0"
MYOPTIONS="acl caps gmp xattr
    gmp [[ description = [ The utilities time, factor and expr support arbitrarily large numbers ] ]]
"

DEPENDENCIES="
    build:
        dev-lang/perl:* [[ description = [ needed by help2man & colour stuff ] ]]
        sys-devel/gettext[>=0.18.1]
    build+run:
        acl? ( sys-apps/acl )
        caps? ( sys-libs/libcap )
        gmp? ( dev-libs/gmp:= )
        xattr? ( sys-apps/attr )
        !sys-apps/net-tools[<1.60_p20120127084908-r1]  [[
           description = [ used to install /bin/hostname ]
           resolution = uninstall-blocked-after
        ]]
    test:
        sys-apps/sydbox[>=0.6.8] [[ note = [ tests fail with sydbox older than 0.6.8 ] ]]
"

DEFAULT_SRC_PREPARE_PATCHES=(
    "${FILES}"/0001-Disable-tests-that-fail-with-sydbox.patch
    "${FILES}"/0001-Disable-test-bind-and-test-connect-which-both-want-t.patch
    "${FILES}"/b469fa044a81762a9eb0da92b4fb47467154c4f1.patch
)

DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=(
    acl
    "caps libcap"
    xattr
)

DEFAULT_SRC_CONFIGURE_OPTION_WITHS=( gmp )

DEFAULT_SRC_CONFIGURE_PARAMS=(
    --enable-install-program=arch,hostname
    --enable-largefile
)

AT_M4DIR=( m4 )

coreutils_src_prepare() {
    autotools_src_prepare

    # The help2man step loves to fail if done during cross-compiles and for chroots.
    # Don't try rebuilding the man pages which we pre-generate and put into a
    # separate tarball. Preparing the man pages tarball works like this:
    # 1. Comment out the man-pages download above.
    # 2. cave resolve coreutils -z1x --abort-at-phase install
    # 3. From ${WORK}, take the .1 files in the man sub-directory
    # 4. Add all .1 files to coreutils-${PV}-man-pages.tar.xz, preserving the paths, e. g.
    #    coreutils-8.22/man.
    # 5. Upload it to dev.exherbo.org:/srv/www/dev.exherbo.org/distfiles/

    # Touch the man pages to prevent rebuilding.
    set -- man/*.x
    edo touch ${@/%x/1}
}

coreutils_src_configure() {
    # Configuration takes a million years without this hack.
    # Only necessary with older sydbox versions.
    if has_version --root "sys-apps/sydbox[<1.0.0_pre]"; then
        esandbox hack_toolong
        default
        esandbox nohack_toolong
    else
        default
    fi
}

coreutils_src_test() {
    # hard code the limit until we find a better way
    edo sed -e 's/name_max=$(stat -f -c %l .)/name_max=150/' \
        -i tests/du/long-from-unreadable.sh \
        -i tests/rm/deep-2.sh

    esandbox allow /dev/full

    default

    esandbox disallow /dev/full
}

coreutils_src_test_expensive() {
    local -a expensive_tests

    edo pushd tests
    expensive_tests=($( find . -type f | xargs grep -E --files-with-matches '^(very_|)expensive_$' | sed -e 's:^\./::g'))
    expensive_tests=("${expensive_tests[@]:-expensive_tests_grep_broke}")
    emake check RUN_{VERY_,}EXPENSIVE_TESTS=yes TESTS="${expensive_tests[*]}"
    edo popd
}

coreutils_src_install() {
    default

    # Provided by sys-process/procps
    edo rm "${IMAGE}"/usr/$(exhost --target)/bin/uptime
    edo rm "${IMAGE}"/usr/share/man/man1/uptime.1

    # NOTE(compnerd) do not provide a link for hostname.  /bin is part of ${PATH} by default, and
    # allows for overloading of hostname from inetutils for a more feature-rich version if users
    # desire.  Install the manpage as hostname.coreutils to avoid conflicting with inetutils since
    # this command does not really support any arguments.
    edo mv "${IMAGE}/usr/$(exhost --target)/bin/hostname" "${IMAGE}/usr/$(exhost --target)/bin/hostname.${PN}"
    edo mv "${IMAGE}/usr/share/man/man1/hostname.1" "${IMAGE}/usr/share/man/man1/hostname.${PN}.1"

    alternatives_for hostname coreutils 100 \
        /usr/$(exhost --target)/bin/hostname /usr/$(exhost --target)/bin/hostname.${PN} \
        /usr/share/man/man1/hostname.1 /usr/share/man/man1/hostname.${PN}.1

    insinto /etc
    newins src/dircolors.hin DIR_COLORS
}

coreutils_pkg_preinst() {
    exhost --is-native -q || return

    # NOTE(compnerd) preserve legacy paths for paludis
    if [[ $(readlink -f "${ROOT##/}"/bin) == ${ROOT##/}/bin ]]; then
        for bin in echo pwd rm readlink env; do
            if [[ ! -e ${ROOT}/usr/$(exhost --target)/bin/${bin} ]]; then
                nonfatal edo cp "${ROOT}bin/${bin}" "${ROOT}usr/$(exhost --target)/bin/${bin}"
            fi
            nonfatal edo ln -sf ../usr/$(exhost --target)/bin/${bin} "${ROOT}bin/${bin}" || \
                eerror ln -sf ../usr/$(exhost --target)/bin/${bin} "${ROOT}bin/${bin}" failed
        done
    fi
    if [[ $(readlink -f "${ROOT##/}"/usr/bin) == ${ROOT##/}/usr/bin ]]; then
        for bin in echo env readlink; do
            nonfatal edo ln -sf ../$(exhost --target)/bin/${bin} "${ROOT}usr/bin/${bin}" || \
                eerror nonfatal edo ln -sf ../$(exhost --target)/bin/${bin##*/} "${ROOT}usr/bin/${bin}" failed
        done
    fi
}

