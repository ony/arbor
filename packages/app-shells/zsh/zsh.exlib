# Copyright 2008-2010 Bernd Steinhauser <berniyh@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'zsh-4.3.6.ebuild' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation.

# Need autotools for AC_FUNC_MMAP, AC_FUNC_STRCOLL
require autotools [ supported_autoconf=[ 2.5 ] supported_automake=[ none ] ]

export_exlib_phases src_configure src_test src_install pkg_preinst

myexparam -b docs=true

SUMMARY="Feature-rich UNIX Shell designed for interactive use"
DESCRIPTION="
Zsh is a shell designed for interactive use, although it is also a powerful scripting language. Many
of the useful features of bash, ksh, and tcsh were incorporated into zsh; many original features
were added.
"
HOMEPAGE="http://www.zsh.org/"
DOWNLOADS="
    ftp://ftp.zsh.org/pub/${PNV}.tar.bz2
    http://www.zsh.org/pub/${PNV}.tar.bz2
    mirror://sourceforge/${PN}/${PNV}.tar.bz2
    doc? (
        ftp://ftp.zsh.org/pub/${PNV}-doc.tar.bz2
        mirror://sourceforge/${PN}/${PNV}-doc.tar.bz2
    )
"

LICENCES="ZSH
    gdbm? ( GPL-2 [[ note = [ Enabling gdbm means that the binary is covered by the GPL-2 ] ]] )"
SLOT="0"
MYOPTIONS="doc pcre
    caps [[ description = [ Adds POSIX.1e (formerly POSIX 6) capabilities for zsh ] ]]
    gdbm [[ description = [ Build gdbm bindings, allowing one to use a gdbm database like a zsh hash ] ]]
"

DEPENDENCIES="
    build:
        doc? ( app-text/texi2html [[ description = [ Convert texinfo docs to .html ] ]] )
    build+run:
        sys-libs/ncurses[>=5.1]
        caps? ( sys-libs/libcap )
        gdbm? ( sys-libs/gdbm )
        pcre? ( dev-libs/pcre[>=3.9] )
"

DEFAULT_SRC_INSTALL_PARAMS=( install install.info )
DEFAULT_SRC_INSTALL_EXTRA_PREFIXES=( Etc/ Functions/ )
DEFAULT_SRC_INSTALL_EXTRA_DOCS=( META-FAQ FEATURES Etc/{completion-style-guide,relnote_4.3.{{5..10},12}.txt,zsh-development-guide} )
DEFAULT_SRC_INSTALL_EXCLUDE=( FAQ.yo )

zsh_src_configure() {
    econf \
        --htmldir=/usr/share/doc/${PNVR}/html \
        --disable-zsh-valgrind \
        --enable-etcdir=/etc/zsh \
        --enable-fndir=/usr/share/zsh/${PV%_*}/functions \
        --enable-runhelpdir=/usr/share/zsh/${PV%_*}/help \
        --enable-site-fndir=/usr/share/zsh/site-functions \
        --enable-function-subdirs \
        --enable-maildir-support \
        --enable-ldflags="${LDFLAGS}" \
        --with-term-lib="ncursesw ncurses" \
        --with-tcsetpgrp \
        --enable-multibyte \
        $(option_enable gdbm) \
        $(option_enable caps cap) \
        $(option_enable pcre)
}

zsh_src_test() {
    # This test might fail, depending on your mount options and your file system.
    edo rm "${WORK}"/Test/C02cond.ztst

    # Some tests need a homedir, so we create a pseudo homedir
    edo mkdir "${WORK}"/pseudo-home
    HOME="${WORK}"/pseudo-home

    # Some tests need to write to /dev/ptmx, they fail otherwise
    esandbox allow /dev/ptmx

    default
}

zsh_src_install() {
    default

    dodir /etc/zsh
    insinto /etc/zsh
    doins "${FILES}"/{zprofile,zshrc}
    keepdir /etc/zsh/site-functions

    keepdir /usr/share/zsh/site-functions
    insinto /usr/share/${PN}/
    doins -r "${WORK}"/{Util,Misc}

    insinto /usr/share/doc/${PNVR}
    doins -r "${WORK}"/StartupFiles

    option doc && emake DESTDIR=${IMAGE} install.html

    if exparam -b docs && option doc ; then
        doins "${WORK}"/Doc/${PN}.pdf
    fi
}

zsh_pkg_preinst() {
    if exhost --is-native -q && [[ $(readlink -f "${ROOT##/}"/bin) == ${ROOT##/}/bin ]] ; then
        # NOTE(tridactyla) preserve legacy paths for user shells
        nonfatal edo cp -f "${IMAGE}"/usr/$(exhost --build)/bin/zsh "${ROOT}"/bin/zsh
    fi
}

