# Copyright 2007, 2008 Richard Brown
# Copyright 2009, 2010 Ingmar Vanhassel
# Copyright 2013 Elias Pipping <pipping@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'ruby-1.8.6_p111.ebuild' from Gentoo, which is:
#     Copyright 1999-2007 Gentoo Foundation

require alternatives

export_exlib_phases src_configure src_test src_install

MY_PNV="${PN}-$(ever replace 3 '-')"
SLOT=$(ever range 1-2)

SUMMARY="An object-oriented scripting language"
DESCRIPTION="A dynamic, open source programming language with a focus on
simplicity and productivity. It has an elegant syntax that is natural to
read and easy to write."
HOMEPAGE="http://www.ruby-lang.org"
DOWNLOADS="mirror://ruby/${SLOT}/${MY_PNV}.tar.bz2"

MYOPTIONS="
    berkdb
    doc
    examples
    gdbm
    ncurses
    readline
    tk
"

tag_number=$(ever replace_all '_' ${PV})
UPSTREAM_CHANGELOG="http://svn.ruby-lang.org/repos/ruby/tags/v${tag_number/p}/ChangeLog"
UPSTREAM_DOCUMENTATION="${HOMEPAGE}/en/documentation [[ lang = en ]]"

DEPENDENCIES="
    build:
        virtual/pkg-config
        doc? (
            app-doc/doxygen
            media-gfx/graphviz
        )
    build+run:
        dev-libs/libffi
        dev-libs/libyaml
        sys-libs/zlib
        virtual/libssl
        berkdb? ( sys-libs/db:= )
        gdbm? ( sys-libs/gdbm )
        ncurses? ( sys-libs/ncurses )
        readline? ( sys-libs/readline )
        tk? ( dev-lang/tk )
"

DEFAULT_SRC_COMPILE_PARAMS=( EXTLDFLAGS="${LDFLAGS}" )

WORK=${WORKBASE}/${MY_PNV}

ruby-2_src_configure() {
    # picked up by ext/socket/extconf
    unset SOCKS_SERVER

    local cfargs=(
        --enable-ipv6
        $(option_enable doc install-doc)

        --with-ruby-version=minor
        --with-rubylibprefix=/usr/$(exhost --target)/lib/ruby
        --with-rubyhdrdir=/usr/$(exhost --target)/include/ruby-${SLOT}

        --program-suffix=${SLOT}
        --enable-shared

        # Possible dbm providers
        --with-dbm-type=db,gdbm
    )

    # Disable modules that were not requested
    local opt_ext opt ext disabled_opts=() opts=(
        'gdbm'
        'ncurses curses'
        'readline'
        'tk'
    )
    for opt_ext in "${opts[@]}"; do
        opt=${opt_ext% *}
        ext=${opt_ext#* }
        option ${opt} || disabled_opts+=( ${ext} )
    done
    option berkdb || option gdbm || disabled_opts+=( dbm )
    if [[ -n ${disabled_opts[@]} ]]; then
        cfargs+=( $(IFS=,; echo "--with-out-ext=${disabled_opts[*]}") )
    fi

    ever at_least 2.2.0 && cfargs+=( --without-jemalloc )

    econf "${cfargs[@]}"
}

ruby-2_src_test() {
    emake test TERM="dumb"
}

ruby-2_src_install() {
    # otherwise install fails weirdly
    emake yes-fake

    default

    local \
        rubylibprefix=$(PKG_CONFIG_PATH=. ${PKG_CONFIG} ruby-${SLOT} --variable=rubylibprefix) \
        rubylibdir=$(PKG_CONFIG_PATH=. ${PKG_CONFIG} ruby-${SLOT} --variable=rubylibdir) \
        sitearchdir=$(PKG_CONFIG_PATH=. ${PKG_CONFIG} ruby-${SLOT} --variable=sitearchdir) \
        vendordir=$(PKG_CONFIG_PATH=. ${PKG_CONFIG} ruby-${SLOT} --variable=vendordir) \
        vendorarchdir=$(PKG_CONFIG_PATH=. ${PKG_CONFIG} ruby-${SLOT} --variable=vendorarchdir)
    keepdir "${vendorarchdir}" "${sitearchdir}"

    if option examples; then
        insinto /usr/share/doc/${PNVR}
        doins -r sample
    fi

    edo pushd "${IMAGE}"
    local src target alternatives=()
    for src in usr/$(exhost --target)/bin/*${SLOT} usr/share/man/man1/*${SLOT}.1; do
        target=${src/${SLOT}}
        alternatives+=( /${target} ${src##*/} )
    done

    if ever at_least 2.2.1; then
        # Ruby 2.2.1 already supports Gem.vendor_dir (/usr/lib64/ruby/vendor_ruby/gems/VERSION)
        # lets use that implementation
        local gem_vendordir=${vendordir}/gems/${SLOT} # based on Ruby 2.2 defaults.rb (Gem.vendor_dir)

        # move provided gems into Gem.vendor_dir directory
        dodir ${gem_vendordir}
        edo mv "${IMAGE}"/${rubylibprefix}/gems/${SLOT}/* "${IMAGE}"/${gem_vendordir}/

        # Gem.default_dir and Gem.vendor_dir
        keepdir ${rubylibprefix}/gems/${SLOT}/{build_info,cache,doc,extensions,gems,specifications}
        keepdir ${gem_vendordir}/{build_info,cache,doc,extensions,gems,specifications}
    else
        # Split gems/ up into vendor_gems/ (packaged gems) and gems/ (user-installed gems)
        edo sed -e "s/default_dir]/default_dir, default_dir.gsub\('gems','vendor_gems'\)]/" -i \
            "${IMAGE}"/${rubylibdir}/rubygems/defaults.rb
        if ever at_least 2.1.1; then
            edo sed -e "s/Gem.default_dir/&.gsub\('gems','vendor_gems'\)/" -i \
                "${IMAGE}"/${rubylibdir}/rubygems/basic_specification.rb
        else
            edo sed -e "s/Gem.default_dir/&.gsub\('gems','vendor_gems'\)/" -i \
                "${IMAGE}"/${rubylibdir}/rubygems/specification.rb
        fi
        edo mv "${IMAGE}"/${rubylibprefix}/{,vendor_}gems
        keepdir ${rubylibprefix}/{vendor_,}gems/${SLOT}/{build_info,cache,doc,extensions,gems,specifications}
    fi

    # FIXME: I don't know what this is
    keepdir ${rubylibprefix}/${SLOT}/racc/rdoc

    # remove empty directory
    ever at_least 2.2.0 && edo rmdir "${IMAGE}"/${rubylibdir}/rake/lib

    # if dependencies are met, C API docs are installed
    edo find "${IMAGE}"/usr/share/doc/${PNVR} -empty -type d -delete

    alternatives_for ${PN} ${SLOT} ${SLOT} "${alternatives[@]}"
    edo popd
}

