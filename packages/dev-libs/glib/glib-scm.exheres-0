# Copyright 2007 Bryan Ã˜stergaard <kloeri@exherbo.org>
# Copyright 2008 Saleem Abdulrasool <compnerd@compnerd.org>
# Distributed under the terms of the GNU General Public License v2

require bash-completion glib
require autotools [ supported_autoconf=[ 2.5 ] supported_automake=[ 1.12 ] ]

SLOT="2"
PLATFORMS="~amd64 ~arm ~x86"
MYOPTIONS="doc"

DEPENDENCIES="
    build:
        app-doc/gtk-doc-autotools
        sys-devel/gettext[>=0.11]
        doc? ( dev-doc/gtk-doc[>=1.15] )
    build+run:
        dev-util/elfutils[>=0.142]
        dev-libs/libffi[>=3.0.0]
    test:
        dev-python/dbus-python
        dev-util/desktop-file-utils
        dev-util/pkg-config[>=0.16]
        gnome-bindings/pygobject:2
        sys-apps/dbus[>=1.2.14] [[ note = [ Required for building GDBus tests ] ]]
        x11-misc/shared-mime-info
    recommendation:
        sys-apps/dbus[>=1.2.14] [[ note = [ Required for GDBus ] ]]
        dev-libs/glib-networking [[ description = [ Required for GNet ] ]]
    suggestion:
        gnome-desktop/dconf [[ description = [ default GSettings backend ] ]]
        gnome-desktop/gvfs [[ description = [ Provides utilities and support for GIO ] ]]
"

# NOTE: glib:2 is used by sydbox, and thus in system. For this reason it shouldn't hard depend on
# anything not in ::arbor, that means no recommendations, just suggestions

# Disable FAM support as FAM is no longer necessary with GIO's inotify support
#
# xattr support is also provided by libc.  glib will prefer to use glibc's xattr support over
# libattr.  As a result, there is no dependency added for attr support.
#
# Enable libelf (via elf-utils) to read compressed module data
#
# The internal copy of PCRE is "patched to use GLib for memory management and Unicode handling"
# Its usage is recommended by upstream, see also
# http://developer.gnome.org/glib/2.32/glib-building.html#dependencies
DEFAULT_SRC_CONFIGURE_PARAMS=( '--enable-static' '--disable-fam' '--disable-selinux'
                               '--enable-xattr' '--enable-libelf' '--with-pcre=internal'
                               '--with-threads=posix' '--disable-dtrace' '--disable-systemtap'
                               '--disable-gcov' )
DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=( 'doc gtk-doc' )
DEFAULT_SRC_CONFIGURE_TESTS=( '--enable-modular-tests --disable-modular-tests' )

src_unpack() {
    default
    scm_src_unpack
}

src_prepare() {
    edo gtkdocize --copy

    glib_src_prepare
    eautoreconf

    # with multipy, we end up with #!python2.7 as a shebang
    edo sed -e 's:@PYTHON@:/usr/bin/env @PYTHON@:' \
            -i gio/gdbus-2.0/codegen/gdbus-codegen.in

    # fail under sydbox
    edo sed -e '/gwakeup\/semantics/d' -i glib/tests/gwakeuptest.c
    edo sed -e '/gapplication\/basic/d' -i gio/tests/gapplication.c
    edo sed -e '/\/DBUS_COOKIE_SHA1/d' -i gio/tests/gdbus-auth.c
    edo sed -e 's/run-assert-msg-test.sh//' -i tests/Makefile.{am,in}

    # we have no guarantee for ipv6 support, so we disable those tests
    edo sed -e '\:/socket/ipv6_a\?sync:d' -i gio/tests/socket.c

    # TODO: need 0.0.0.0
    edo sed -e '/socket\/ipv6_v4mapped/d' -i gio/tests/socket.c
}

src_install() {
    glib_src_install

    if ! option bash-completion; then
        edo rm "${IMAGE}"/usr/share/bash-completion/completions/{gdbus,gresource,gsettings}
        edo rmdir "${IMAGE}"/usr/share/bash-completion/{completions/,}
    fi
}

